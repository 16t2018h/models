//! ACTIVITY BEGIN. 'fba7f0fa-0b84-4230-bfd3-5da9fd43c586' DO NOT EDIT THIS LINE.
public service UI::TRACK~>setTargetPressed () is
begin
  Tracking::setTargetPressed();
end;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'd5a72803-c3eb-4b7d-b124-9cfefe848fd0' DO NOT EDIT THIS LINE.
public service UI::TRACK~>startStopPressed () is
begin
  Tracking::startStopPressed();
end;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'c53ddc42-3306-4fc8-8a09-e84908d3376f' DO NOT EDIT THIS LINE.
public service UI::TRACK~>lapResetPressed () is
begin
  Tracking::lapResetPressed();
end;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '9297ecd3-07db-41d6-b3bf-2b4f9d6ee05b' DO NOT EDIT THIS LINE.
public service UI::TRACK~>lightPressed () is
begin
  Tracking::lightPressed();
end;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'ec3d7bd4-33e2-4c70-96df-a1b5e7a76a3a' DO NOT EDIT THIS LINE.
public service UI::TRACK~>modePressed () is
begin
  Tracking::modePressed();
end;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '733e3acf-3f91-4f59-ac46-fa16a07b6ae4' DO NOT EDIT THIS LINE.
public service UI::TRACK~>newGoalSpec ( spanType : in UI::UIGoalSpan,
                                       criteriaType : in UI::UIGoalCriteria,
                                       span : in real,
                                       maximum : in real,
                                       minimum : in real,
                                       sequenceNumber : in integer ) is
begin
  if ( criteriaType = UI::HeartRate ) then
    if ( spanType = UI::Distance ) then
      Tracking::newGoalSpec( Tracking::Distance, Tracking::HeartRate, span, maximum, minimum, sequenceNumber);
    elsif ( spanType = UI::Time ) then
      Tracking::newGoalSpec( Tracking::Time, Tracking::HeartRate, span, maximum, minimum, sequenceNumber);
    end if;
  elsif ( criteriaType = UI::Pace ) then
    if ( spanType = UI::Distance ) then
      Tracking::newGoalSpec( Tracking::Distance, Tracking::Pace, span, maximum, minimum, sequenceNumber);
    elsif ( spanType = UI::Time ) then
      Tracking::newGoalSpec( Tracking::Time, Tracking::Pace, span, maximum, minimum, sequenceNumber);
    end if;
  end if;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'c54392d2-6d58-4709-8e8c-cd44f1517301' DO NOT EDIT THIS LINE.
public service Tracking::HR~>registerListener () is
begin
  HeartRateMonitor::registerListener();
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'bc715af1-ec2d-4762-9348-4f27d5c8fdeb' DO NOT EDIT THIS LINE.
public service Tracking::HR~>unregisterListener () is
begin
  HeartRateMonitor::unregisterListener();
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'ec92abe2-9e26-4b0a-bc98-d9620b3c8375' DO NOT EDIT THIS LINE.
public service Tracking::LOC~>getDistance ( result : out real,
                                           toLong : in real,
                                           toLat : in real,
                                           fromLong : in real,
                                           fromLat : in real ) is
distance: real;
begin
  Location::getDistance( distance, toLong, toLat, fromLong, fromLat );
  result := distance;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '4bb3dd15-ae84-45b4-bc10-97a441e9dd9e' DO NOT EDIT THIS LINE.
public service Tracking::LOC~>getLocation ( longitude : out real,
                                           latitude : out real ) is
lat: real;
longi: real;
begin
  lat := latitude;
  longi := longitude;
  Location::getLocation( longi, lat );
  latitude := lat;
  longitude := longi;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '51fc04d0-e831-4169-b7ad-6916a87548dc' DO NOT EDIT THIS LINE.
public service Tracking::LOC~>registerListener () is
begin
  Location::registerListener();
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '33fe09d0-97eb-4f64-9049-49e9b1f78148' DO NOT EDIT THIS LINE.
public service Tracking::LOC~>unregisterListener () is
begin
  Location::unregisterListener();
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '2ab593b9-a17a-459b-a6b8-44985cdb4396' DO NOT EDIT THIS LINE.
public service Tracking::UI~>setData ( value : in real,
                                      unit : in Tracking::Unit ) is
begin
  if (unit = Tracking::km) then
    UI::setData(value, UI::km);
  elsif (unit = Tracking::meters) then
    UI::setData(value, UI::meters);
  elsif (unit = Tracking::minPerKm) then
    UI::setData(value, UI::minPerKm);
  elsif (unit = Tracking::kmPerHour) then
    UI::setData(value, UI::kmPerHour);
  elsif (unit = Tracking::miles) then
    UI::setData(value, UI::miles);
  elsif (unit = Tracking::yards) then
    UI::setData(value, UI::yards);
  elsif (unit = Tracking::feet) then
    UI::setData(value, UI::feet);
  elsif (unit = Tracking::minPerMile) then
    UI::setData(value, UI::minPerMile);
  elsif (unit = Tracking::mph) then
    UI::setData(value, UI::mph);
  elsif (unit = Tracking::bpm) then
    UI::setData(value, UI::bpm);
  elsif (unit = Tracking::laps) then
    UI::setData(value, UI::laps);
  end if;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'aec6dff9-d750-4b65-a4de-5a453831d924' DO NOT EDIT THIS LINE.
public service Tracking::UI~>setIndicator ( indicator : in Tracking::Indicator ) is
begin
  if ( indicator = Tracking::Blank  ) then
    UI::setIndicator( UI::Blank );
  elsif ( indicator = Tracking::Down ) then
    UI::setIndicator( UI::Down );
  elsif ( indicator = Tracking::Flat ) then
    UI::setIndicator( UI::Flat );
  elsif ( indicator = Tracking::Up ) then
    UI::setIndicator( UI::Up );
  end if;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '32bc8043-cac1-439a-a382-112fd8c69f2b' DO NOT EDIT THIS LINE.
public service Tracking::UI~>setTime ( time : in integer ) is
begin
  UI::setTime( time );
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. '5f8e6ef1-aa6e-4ccf-85de-e59e6e3d3d2e' DO NOT EDIT THIS LINE.
public service HeartRateMonitor::HRChange~>heartRateChanged ( heartRate : in integer ) is
begin
  Tracking::heartRateChanged( heartRate );
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

